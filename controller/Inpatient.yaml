```yaml

---
stoplight:
  version: 1.0.0
  info:
    title: Inpatient Controller
    description: 
This is an API for Inpatient Controller which includes four endpoints: "/v1/api/hello", "/v1/api/helloUserInfo", "/v1/api/helloFeign" and "/v1/api/helloFeatureToggle". Each endpoint has a different purpose, such as returning a hello message, hello message with user info, hello message from feign client, and a boolean value from feature toggle microservice. It also includes a schema for UserInfoDTO.
    contact:
      name: MediRecords
      url: https://medirecords.com
      email: info@medirecords.com
  components:
    schemas:
      UserInfoDTO:
        type: object
        properties:
          userId:
            type: string
          userName:
            type: string
          tenantId:
            type: string
          tenantName:
            type: string
openapi: 3.1.0
info:
    title: controller/InpatientController.java
    description: 
    version: '1.0'
servers:
    - url: 'http://localhost:3000'

      /v1/api/hello:
        get:
          description: Returns a hello message
          parameters:
            - name: name
              in: query
              description: The name of the user
              required: false
              type: string
              default: stranger
          responses:
            200:
              description: Hello message
              schema:
                type: string
      /v1/api/helloUserInfo:
        get:
          description: Returns a hello message with user info
          parameters:
            - name: name
              in: query
              description: The name of the user
              required: false
              type: string
              default: stranger
          responses:
            200:
              description: Hello message with user info
              schema:
                $ref: '#/components/schemas/UserInfoDTO'
      /v1/api/helloFeign:
        get:
          description: Returns a hello message from feign client
          parameters:
            - name: pageable
              in: query
              description: Pageable object
              required: true
              type: string
          responses:
            200:
              description: Hello message from feign client
              schema:
                type: string
      /v1/api/helloFeatureToggle:
        get:
          description: Returns a boolean value from feature toggle microservice
          parameters:
            - name: tenantId
              in: query
              description: The Id of the tenant
              required: true
              type: string
            - name: featureName
              in: query
              description: The name of the feature
              required: true
              type: string
            - name: userId
              in: query
              description: The Id of the user
              required: true
              type: string
          responses:
            200:
              description: Boolean value from feature toggle microservice
              schema:
                type: boolean
```